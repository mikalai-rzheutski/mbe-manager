version: "3.3"
services:
  app:
    image: mbe-manager
    container_name: mbe-manager
    build:
      context: ./app/
      dockerfile: Dockerfile
    environment:
      - MBE_DB_DRIVER=org.postgresql.Driver
      - MBE_DB_URL=jdbc:postgresql://${DOCKER_IP}:${PG_PORT}/postgres
      - MBE_DB_USERNAME=${PG_USERNAME}
      - MBE_DB_PW=${PG_PASSWORD}
      - MBE_CACHE_FOLDER=/JavaProjects/design_cache
    ports:
      - 8082:8082
    depends_on:
      - db 
  db:
    image: postgres:9.5-alpine
    container_name: mbe-db
    environment:
      - POSTGRES_USER=${PG_USERNAME}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    volumes:
      - dbMBE:/var/lib/postgresql/data
    ports:
      - ${PG_PORT}:5432
    networks:
      - db-network
  prometheus:
    image: prometheus
    container_name: prometheus
    build:
      context: ./monitoring/prometheus/
      dockerfile: Dockerfile
    ports:
    - '9090:9090'
  pgexporter:
    image: pgexporter
    container_name: pgexporter
    build:
      context: ./monitoring/pg_exporter/
      dockerfile: Dockerfile
    ports:
      - 9187:9187
    depends_on:
      - app
    command: "-extend.query-path=/queries.yaml"
    environment:
      - DATA_SOURCE_NAME=postgresql://${PG_USERNAME}:${PG_PASSWORD}@${DOCKER_IP}:${PG_PORT}/postgres?sslmode=disable
      - DATA_SOURCE_USER=${PG_USERNAME}
      - DATA_SOURCE_PASS=${PG_PASSWORD}   
    networks:
      - db-network
  grafana:
    image: grafana/grafana:5.2.4
    container_name: 'grafana'
    ports:
    - '3000:3000'
    depends_on:
    - prometheus
volumes:
  dbMBE:
networks:
  db-network: